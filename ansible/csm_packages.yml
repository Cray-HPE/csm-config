#!/usr/bin/env ansible-playbook
#
# MIT License
#
# (C) Copyright 2022-2025 Hewlett Packard Enterprise Development LP
#
# Permission is hereby granted, free of charge, to any person obtaining a
# copy of this software and associated documentation files (the "Software"),
# to deal in the Software without restriction, including without limitation
# the rights to use, copy, modify, merge, publish, distribute, sublicense,
# and/or sell copies of the Software, and to permit persons to whom the
# Software is furnished to do so, subject to the following conditions:
#
# The above copyright notice and this permission notice shall be included
# in all copies or substantial portions of the Software.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL
# THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR
# OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,
# ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR
# OTHER DEALINGS IN THE SOFTWARE.
#
# Application-nodes only play
- hosts: Application:&cfs_image
  gather_facts: yes
  # Gather the minimum that gets the ansible_distribution variable set
  gather_subset:
    - '!all'
    - '!min'
    - distribution
  any_errors_fatal: true
  remote_user: root
  vars_files:
    - vars/csm_repos.yml
    - vars/csm_packages.yml
  vars:
    csm_services:
      - bos-reporter
      - cfs-state-reporter
      - csm-node-heartbeat
      - csm-node-identity
      # CASMTRIAGE-7459
      - iscsid
      - multipathd
    SKERN_9187:
      - /opt/cray/cray-spire/orca-spire-agent
      - /usr/bin/ckdump-spire-agent
      # ALT-955
      - /usr/bin/spire-agent
  roles:
    # Install CSM repositories and packages
    - role: csm.packages
      vars:
        packages: "{{ common_csm_sles_packages + application_csm_sles_packages }}"
      when: ansible_distribution_file_variety == "SUSE"
    - role: csm.ca_cert
    - role: trust-csm-ssh-keys
  tasks:
    - name: Add CSM services to presets file
      loop: "{{ csm_services }}"
      lineinfile:
        path: "/usr/lib/systemd/system-preset/89-cray-default.preset"
        create: true
        state: present
        line: "enable {{item}}.service"
    - name: Apply presets for CSM services
      loop: "{{ csm_services }}"
      command: systemctl preset "{{item}}.service"
    # WAR for SKERN-9187
    - name: Apply WAR for SKERN-9187
      loop: "{{ SKERN_9187 }}"
      command: ln -f /opt/cray/cray-spire/spire-agent "{{item}}"
    - name: Cont. WAR SKERN-9187
      command: ln -sf /var/lib/spire/data/keys.json /var/lib/spire/data/svid.key

# Compute-nodes only play
- hosts: Compute:&cfs_image
  gather_facts: yes
  # Gather the minimum that gets the ansible_distribution variable set
  gather_subset:
    - '!all'
    - '!min'
    - distribution
  any_errors_fatal: true
  remote_user: root
  vars:
    csm_services:
      - bos-reporter
      - cfs-state-reporter
      - csm-node-heartbeat
      - csm-node-identity
      # CASMTRIAGE-7459
      - iscsid
      - multipathd
    SKERN_9187:
      - /opt/cray/cray-spire/orca-spire-agent
      - /usr/bin/ckdump-spire-agent
      # ALT-955
      - /usr/bin/spire-agent
  vars_files:
    - vars/csm_repos.yml
    - vars/csm_packages.yml
  roles:
    # Install CSM repositories and packages
    - role: csm.packages
      vars:
        packages: "{{ common_csm_sles_packages + compute_csm_sles_packages }}"
      when: ansible_distribution_file_variety == "SUSE"
    - role: csm.ca_cert
    - role: trust-csm-ssh-keys
  tasks:
    - name: Add CSM services to presets file
      loop: "{{ csm_services }}"
      lineinfile:
        path: "/usr/lib/systemd/system-preset/89-cray-default.preset"
        create: true
        state: present
        line: "enable {{item}}.service"
    - name: Apply presets for CSM services
      loop: "{{ csm_services }}"
      command: systemctl preset "{{item}}.service"
    # WAR for SKERN-9187
    - name: Apply WAR for SKERN-9187
      loop: "{{ SKERN_9187 }}"
      command: ln -f /opt/cray/cray-spire/spire-agent "{{item}}"
    - name: Cont. WAR SKERN-9187
      command: ln -sf /var/lib/spire/data/keys.json /var/lib/spire/data/svid.key

# Application-nodes only play, excluding images
- hosts: Application:!cfs_image
  gather_facts: yes
  # Gather the minimum that gets the ansible_distribution variable set
  gather_subset:
    - '!all'
    - '!min'
    - distribution
  any_errors_fatal: true
  remote_user: root
  vars_files:
    - vars/csm_repos.yml
    - vars/csm_packages.yml
  roles:
    # Install CSM repositories and packages
    - role: csm.packages
      vars:
        packages: "{{application_csm_sles_packages }}"
      when: ansible_distribution_file_variety == "SUSE"
  tasks:
    - name: Enable smart service
      systemd:
        name: smart
        state: started
        enabled: true
