#
# MIT License
#
# (C) Copyright 2025 Hewlett Packard Enterprise Development LP
#
# Permission is hereby granted, free of charge, to any person obtaining a
# copy of this software and associated documentation files (the "Software"),
# to deal in the Software without restriction, including without limitation
# the rights to use, copy, modify, merge, publish, distribute, sublicense,
# and/or sell copies of the Software, and to permit persons to whom the
# Software is furnished to do so, subject to the following conditions:
#
# The above copyright notice and this permission notice shall be included
# in all copies or substantial portions of the Software.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL
# THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR
# OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,
# ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR
# OTHER DEALINGS IN THE SOFTWARE.
#
# Tasks for the csm.ssh_config role
- name: Get vault token
  no_log: true
  uri:
    url: "{{ ssh_config_vault_url }}/v1/auth/kubernetes/login"
    method: POST
    body:
      jwt: "{{ lookup('file', ssh_config_vault_jwt_file) }}"
      role: "{{ lookup('file', ssh_config_vault_role_file) }}"
    body_format: json
  register: vault_login
  delegate_to: localhost
  run_once: true

- name: Retrieve the ssh config
  block:
    - name: Lookup the SSH config value in Vault
      no_log: true
      run_once: true
      delegate_to: localhost
      set_fact:      
        ssh_config: "{{ lookup('hashi_vault',
                      'secret=' + ssh_config_user_config_secret_prefix + ssh_config_username + ':' + ssh_config_user_config_key +
                      ' token=' + vault_login.json.auth.client_token +
                      ' url=' + ssh_config_vault_url) }}"
        ssh_config_found: true
  rescue:
    - name: set the value if key was not found
      set_fact:
        ssh_config: ''
        ssh_config_found: false

- name: Determine if play will go on
  debug: msg="No CSM SSH configuration key exists in Vault for the {{ ssh_config_username }} user. Exiting without error."
  when: not ssh_config_found

- name: End play if the key does not exist in Vault
  meta: end_play
  when: not ssh_config_found

- name: Ensure the user exists
  user:
    name: "{{ ssh_config_username }}"
    state: present
  register: user_registered

- name: Copy the SSH config file
  copy:
    content: "{{ ssh_config }}"
    dest: "{{ user_registered.home }}/.ssh/{{ ssh_config_filename }}"
    mode: 0644
  become: true
  become_user: "{{ ssh_config_username }}"
  when: ssh_config_found
