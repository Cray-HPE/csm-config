#
# MIT License
#
# (C) Copyright 2025 Hewlett Packard Enterprise Development LP
#
# Permission is hereby granted, free of charge, to any person obtaining a
# copy of this software and associated documentation files (the "Software"),
# to deal in the Software without restriction, including without limitation
# the rights to use, copy, modify, merge, publish, distribute, sublicense,
# and/or sell copies of the Software, and to permit persons to whom the
# Software is furnished to do so, subject to the following conditions:
#
# The above copyright notice and this permission notice shall be included
# in all copies or substantial portions of the Software.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL
# THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR
# OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,
# ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR
# OTHER DEALINGS IN THE SOFTWARE.
#
# Apply kyverno policy for critical services to equally
# distribute/ balance across RR k8s zones
---
- name: Copy the yaml file to the target machine
  copy:
    src: rrs_topology_policy.yml
    dest: /tmp/rrs_topology_policy.yml
  delegate_to: "{{ play_hosts | first }}"
  run_once: true  

- name: Check if RR static ConfigMap exists
  kubernetes.core.k8s_info:
    api_version: v1
    api_key: "{{ lookup('ansible.builtin.file', '/run/secrets/kubernetes.io/serviceaccount/token') }}"
    kind: ConfigMap
    namespace: rack-resiliency
    name: rrs-mon-static
  register: rr_static_configmap
  delegate_to: localhost
  run_once: true

- name: Apply RR static ConfigMap only if not present
  kubernetes.core.k8s:
    api_version: v1
    api_key: "{{ lookup('ansible.builtin.file', '/run/secrets/kubernetes.io/serviceaccount/token') }}"
    state: present
    src: 'cm_static.yml'
  when: rr_static_configmap.resources | length == 0
  delegate_to: localhost
  run_once: true

- name: Check if RR ClusterPolicy already exists
  delegate_to: localhost
  run_once: true
  kubernetes.core.k8s_info:
    api_version: kyverno.io/v1
    api_key: "{{ lookup('ansible.builtin.file', '/run/secrets/kubernetes.io/serviceaccount/token') }}"
    kind: ClusterPolicy
    name: insert-labels-topology-constraints
  register: check_rr_clusterpolicy

- name: apply kyverno policy
  script: apply_topology_policy.py "/tmp/rrs_topology_policy.yml"
  args:
    executable: python3
  register: kyverno_policy_validation
  delegate_to: "{{ play_hosts | first }}"
  run_once: true
  when: not (check_rr_clusterpolicy.resources | length > 0)
