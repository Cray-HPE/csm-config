#
# MIT License
#
# (C) Copyright 2021-2022 Hewlett Packard Enterprise Development LP
#
# Permission is hereby granted, free of charge, to any person obtaining a
# copy of this software and associated documentation files (the "Software"),
# to deal in the Software without restriction, including without limitation
# the rights to use, copy, modify, merge, publish, distribute, sublicense,
# and/or sell copies of the Software, and to permit persons to whom the
# Software is furnished to do so, subject to the following conditions:
#
# The above copyright notice and this permission notice shall be included
# in all copies or substantial portions of the Software.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL
# THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR
# OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,
# ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR
# OTHER DEALINGS IN THE SOFTWARE.
#
# Tasks for the csm.password role
- name: Get vault token
  no_log: true
  uri:
    url: "{{ password_vault_url }}/v1/auth/kubernetes/login"
    method: POST
    body:
      jwt: "{{ lookup('file', password_vault_jwt_file) }}"
      role: "{{ lookup('file', password_vault_role_file) }}"
    body_format: json
  register: vault_login
  delegate_to: localhost
  run_once: true

- name: Retrieve the credentials
  block:
    - name: Lookup the password value in Vault
      no_log: true
      run_once: true
      delegate_to: localhost
      set_fact:
        the_password: "{{ lookup('hashi_vault',
                        'secret=' + password_vault_secret + password_username + ':' + password_vault_secret_key +
                        ' token=' + vault_login.json.auth.client_token +
                        ' url=' + password_vault_url) }}"
  rescue:
    - name: Skip updating the password if none was found in Vault
      set_fact:
        the_password: ""

- name: Set the password for the specified user
  user:
    name: "{{ password_username }}"
    password: "{{ the_password }}"
  when: the_password is defined and the_password != ""