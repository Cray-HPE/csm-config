#
# MIT License
#
# (C) Copyright 2024 Hewlett Packard Enterprise Development LP
#
# Permission is hereby granted, free of charge, to any person obtaining a
# copy of this software and associated documentation files (the "Software"),
# to deal in the Software without restriction, including without limitation
# the rights to use, copy, modify, merge, publish, distribute, sublicense,
# and/or sell copies of the Software, and to permit persons to whom the
# Software is furnished to do so, subject to the following conditions:
#
# The above copyright notice and this permission notice shall be included
# in all copies or substantial portions of the Software.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL
# THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR
# OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,
# ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR
# OTHER DEALINGS IN THE SOFTWARE.
#
---
- name: SUSE Packages
  when: ansible_distribution_file_variety == "SUSE"
  block:

    - name: Configure CSM RPM Repos (SLES-based)
      zypper_repository:
        name: "{{ item.name }}"
        description: "{{ item.description }}"
        repo: "{{ item.repo }}"
        state: present
        disable_gpg_check: "{{ item.disable_gpg_check | default('false') }}"
      loop: "{{ ncn_kernel_upgrade_repositories }}"

    - name: Allow unsigned repo metadata
      command: "zypper modifyrepo --gpgcheck-allow-unsigned-repo {{ item.name }}"
      loop: "{{ ncn_kernel_upgrade_repositories }}"

    - name: Unlock kernel-default
      command: "zypper removelock kernel-default"
      register: removelock
      changed_when: '"1 lock has been successfully removed." in removelock.stdout'
      notify: "ncn_kernel_upgrade : Zypper lock kernel-default"
      args:
        warn: false

    - name: Install RPMs (SLES-based)
      zypper:
        disable_recommends: true
        oldpackage: true
        state: present
        type: package
        name: "{{ ncn_kernel_upgrade_packages }}"
        update_cache: false
      register: install
      changed_when:
      - install.stdout is defined
      - '"Reboot is suggested to ensure that your system benefits from these updates." in install.stdout'
      failed_when:
        - install.rc != 0
        - install.rc != 107

    - name: Update multiversion.kernels
      lineinfile:
        create: true
        mode: '0644'
        path: /etc/zypp/zypp.conf
        regexp: '^#? ?multiversion\.kernels =.*'
        line: 'multiversion.kernels = {{ ncn_kernel_upgrade_kernel_version }}'
        state: present
      notify: "ncn_kernel_upgrade : Zypper purge kernels"

- name: Blacklist kernel modules
  lineinfile:
    create: true
    mode: '0644'
    path: /etc/modprobe.d/disabled-modules.conf
    regexp: 'install {{ item }} .*'
    line: 'install {{ item }} /bin/true'
    state: present
  loop: "{{ ncn_kernel_upgrade_blacklist }}"

- name: Blacklist kernel modules from dracut
  lineinfile:
    create: true
    mode: '0644'
    path: /etc/dracut.conf.d/99-csm-ansible.conf
    regexp: '^omit_drivers\+=.*'
    line: 'omit_drivers+=" {{ ncn_kernel_upgrade_blacklist | join(" ") }} " # Needs to start and end with a space to mitigate warnings. '
    state: present

- name: Include kernel modules in dracut
  lineinfile:
    create: true
    mode: '0644'
    path: /etc/dracut.conf.d/99-csm-ansible.conf
    regexp: '^add_drivers\+=.*'
    line: 'add_drivers+=" {{ ncn_kernel_upgrade_add | join(" ") }} " # Needs to start and end with a space to mitigate warnings. '
    state: present
