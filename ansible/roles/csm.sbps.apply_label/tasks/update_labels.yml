#
# MIT License
#
# (C) Copyright 2025 Hewlett Packard Enterprise Development LP
#
# Permission is hereby granted, free of charge, to any person obtaining a
# copy of this software and associated documentation files (the "Software"),
# to deal in the Software without restriction, including without limitation
# the rights to use, copy, modify, merge, publish, distribute, sublicense,
# and/or sell copies of the Software, and to permit persons to whom the
# Software is furnished to do so, subject to the following conditions:
#
# The above copyright notice and this permission notice shall be included
# in all copies or substantial portions of the Software.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL
# THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR
# OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,
# ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR
# OTHER DEALINGS IN THE SOFTWARE.
#
---

# This list of tasks is called from main.yml in a loop
# The loop variable is {{xname}} and contains the xname of the worker node to check
# This also requires that the {{iscsi_workers}} workers variable has been set in main.yml to
# the list of all worker NCN xnames

- name: "Get SLS data for {{xname}}"
  delegate_to: localhost
  run_once: true
  uri:
    url: "{{ 'http://cray-sls/v1/hardware/' + xname }}"
    return_content: true
    method: GET
  register: _api_result

- name: "Set worker hostname list for {{xname}}"
  delegate_to: localhost
  run_once: true
  set_fact:
    worker_hostnames: "{{ _api_result.json.ExtraProperties.Aliases | select('search', '^ncn-w[0-9]{3}$') }}"

- name: "Verify a worker hostname was found for {{xname}}"
  delegate_to: localhost
  run_once: true
  ansible.builtin.assert:
    that: worker_hostnames | length > 0
    fail_msg: "No ncn-w### hostname found for {{ xname }}"
    success_msg: "Found ncn-w### hostname for {{ xname }}"

- name: "Get Kubernetes node info for {{xname}} / {{worker_hostnames[0]}}"
  delegate_to: localhost
  run_once: true
  kubernetes.core.k8s_info:
    api_version: v1
    api_key: "{{ lookup('ansible.builtin.file', '/run/secrets/kubernetes.io/serviceaccount/token') }}"
    kind: Node
    name: "{{worker_hostnames[0]}}"
  register: _node_info
  failed_when: _node_info.resources is not defined or _node_info.resources | length == 0

- name: "Check iSCSI label and HSM group for {{xname}} / {{worker_hostnames[0]}}"
  delegate_to: localhost
  run_once: true
  set_fact:
    _has_iscsi_label: "{{ 'iscsi' in _node_info.resources[0].metadata.labels and _node_info.resources[0].metadata.labels['iscsi'] == iscsi_label_value }}"
    _intended_for_iscsi: "{{ xname in iscsi_workers }}"

- name: "Add label to {{xname}} / {{worker_hostnames[0]}}"
  delegate_to: localhost
  run_once: true
  kubernetes.core.k8s:
    api_version: v1
    api_key: "{{ lookup('ansible.builtin.file', '/run/secrets/kubernetes.io/serviceaccount/token') }}"
    kind: Node
    name: "{{worker_hostnames[0]}}"
    definition:
      metadata:
        labels:
          iscsi: "{{iscsi_label_value}}"
  when: _intended_for_iscsi and not _has_iscsi_label

- name: "Remove label from {{xname}} / {{worker_hostnames[0]}}"
  delegate_to: localhost
  run_once: true
  kubernetes.core.k8s:
    api_version: v1
    api_key: "{{ lookup('ansible.builtin.file', '/run/secrets/kubernetes.io/serviceaccount/token') }}"
    kind: Node
    name: "{{worker_hostnames[0]}}"
    definition:
      metadata:
        labels:
          iscsi: null
  when: not _intended_for_iscsi and _has_iscsi_label
