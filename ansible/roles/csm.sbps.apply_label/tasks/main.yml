#
# MIT License
#
# (C) Copyright 2024-2025 Hewlett Packard Enterprise Development LP
#
# Permission is hereby granted, free of charge, to any person obtaining a
# copy of this software and associated documentation files (the "Software"),
# to deal in the Software without restriction, including without limitation
# the rights to use, copy, modify, merge, publish, distribute, sublicense,
# and/or sell copies of the Software, and to permit persons to whom the
# Software is furnished to do so, subject to the following conditions:
#
# The above copyright notice and this permission notice shall be included
# in all copies or substantial portions of the Software.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL
# THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR
# OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,
# ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR
# OTHER DEALINGS IN THE SOFTWARE.
#
---

# By default all the worker nodes (Management_Worker) will be configured, unless
# the HSM group defined below (under iscsi_group_name) exists. If that HSM group exists,
# then all workers belonging to that group will be configured.

# {{groups}} is a variable containing all host groups. CFS creates a host group for every HSM group.
# {{group_names}} is a list of host groups to which the current host belongs.

#  Add or remove the k8s label on worker nodes to match the HSM group
- name: All workers are intended for iSCSI by default
  run_once: true
  delegate_to: localhost
  set_fact:
    iscsi_workers: "{{ groups['Management_Worker'] }}"

- name: Only workers in HSM group are intended for iSCSI
  run_once: true
  delegate_to: localhost
  set_fact:
    # Overwrite the fact from the previous step with the intersection of itself and the HSM group
    iscsi_workers: "{{ groups[iscsi_group_name] | intersect(iscsi_workers) }}"
  when: iscsi_group_name in groups

- name: Verify HSM iSCSI group contains at least one worker node
  run_once: true
  delegate_to: localhost
  when: iscsi_group_name in groups
  ansible.builtin.assert:
    that: iscsi_workers | length > 0
    fail_msg: "HSM group \"{{iscsi_group_name}}\" contains no worker NCNs"
    success_msg: "HSM group \"{{iscsi_group_name}}\" contains at least 1 worker NCN"

- name: Update labels
  ansible.builtin.include_tasks:
    file: update_labels.yml
  loop: "{{ groups['Management_Worker'] }}"
  loop_control:
    loop_var: xname
