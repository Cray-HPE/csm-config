# Copyright 2021 Hewlett Packard Enterprise Development LP
#
# Permission is hereby granted, free of charge, to any person obtaining a
# copy of this software and associated documentation files (the "Software"),
# to deal in the Software without restriction, including without limitation
# the rights to use, copy, modify, merge, publish, distribute, sublicense,
# and/or sell copies of the Software, and to permit persons to whom the
# Software is furnished to do so, subject to the following conditions:
#
# The above copyright notice and this permission notice shall be included
# in all copies or substantial portions of the Software.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL
# THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR
# OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,
# ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR
# OTHER DEALINGS IN THE SOFTWARE.
#
# (MIT License)

---
- include_role:
    name: csm.ncn.download_utils
- include_role:
    name: csm.ncn.standardize_hostnames

- name: Get BSS Global cloud-init payload
  delegate_to: localhost
  uri:
    url: "{{ bss_url }}/boot/v1/bootparameters"
    body_format: json
    body:
      hosts:
        - Global
    headers:
      Authorization: "{{ authorization_header }}"
  register: global_payload

- name: Get first master hostname
  set_fact:
    first_master_hostname: "{{ global_payload.json | first | json_query(json_query) }}"
  vars:
    json_query: '"cloud-init"."meta-data"."first-master-hostname"'

- name: Pick new first master
  when:
    - first_master_hostname == target_hostname
  delegate_to: localhost
  set_fact:
    new_first_master_hostname: "{{ item }}"
  with_random_choice: "{{ master_ncns | reject('search', target_hostname) | list }}"

- name: Get certificate key
  when:
    - first_master_hostname == target_hostname
  delegate_to: "{{ new_first_master_hostname }}"
  shell: kubeadm init phase upload-certs --upload-certs 2>&1 | tail -1
  register: certificate_key

- name: Build kubeadm config builder script
  when:
    - first_master_hostname == target_hostname
  delegate_to: "{{ new_first_master_hostname }}"
  template:
    src: "templates/build-kubeadm.sh.j2"
    dest: "/tmp/build-kubeadm.sh"
    mode: 0755

- name: Generate kubeadm config using script
  when:
    - first_master_hostname == target_hostname
  delegate_to: "{{ new_first_master_hostname }}"
  shell: /tmp/build-kubeadm.sh

- name: Copy token certs refresh script to new first master
  when:
    - first_master_hostname == target_hostname
  delegate_to: "{{ new_first_master_hostname }}"
  copy:
    src: "files/token-certs-refresh.sh"
    dest: "/srv/cray/scripts/kubernetes/"
    mode: 0755

- name: Run token certs refresh script
  when:
    - first_master_hostname == target_hostname
  delegate_to: "{{ new_first_master_hostname }}"
  shell: /srv/cray/scripts/kubernetes/token-certs-refresh.sh

- name: Setup cron to run refresh script
  when:
    - first_master_hostname == target_hostname
  delegate_to: "{{ new_first_master_hostname }}"
  cron:
    name: cray-k8s-token-certs-refresh
    special_time: hourly
    user: root
    job: "/srv/cray/scripts/kubernetes/token-certs-refresh.sh >> /var/log/cray/cron.log 2>&1"
    cron_file: cray-k8s-token-certs-refresh

- name: Set new first master in BSS global cloud-init metadata
  when:
    - first_master_hostname == target_hostname
  delegate_to: localhost
  environment:
    SLS_BASE_URL: "{{ sls_url }}"
    BSS_BASE_URL: "{{ bss_url }}"
    HSM_BASE_URL: "{{ hsm_url }}"
    TOKEN: "{{ token }}"
  command: csi handoff bss-update-cloud-init --set
    meta-data.first-master-hostname="{{ new_first_master_hostname }}" --limit Global
  register: is_member_output
  ignore_errors: true
