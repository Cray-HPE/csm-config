#
# MIT License
#
# (C) Copyright 2025 Hewlett Packard Enterprise Development LP
#
# Permission is hereby granted, free of charge, to any person obtaining a
# copy of this software and associated documentation files (the "Software"),
# to deal in the Software without restriction, including without limitation
# the rights to use, copy, modify, merge, publish, distribute, sublicense,
# and/or sell copies of the Software, and to permit persons to whom the
# Software is furnished to do so, subject to the following conditions:
#
# The above copyright notice and this permission notice shall be included
# in all copies or substantial portions of the Software.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL
# THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR
# OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,
# ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR
# OTHER DEALINGS IN THE SOFTWARE.
#
---

# Discover physical racks and their mapping with respective management nodes
# placement from HSM/ SLS 
- name: Get admin-client-auth secret
  delegate_to: localhost
  run_once: true
  kubernetes.core.k8s_info:
    api_version: v1
    api_key: "{{ lookup('ansible.builtin.file', '/run/secrets/kubernetes.io/serviceaccount/token') }}"
    kind: Secret
    name: "admin-client-auth"
    namespace: "default"
  register: _sec
  failed_when: (_sec.resources is not defined) or (_sec.resources | length == 0)

- name: Verify secret has data field
  delegate_to: localhost
  run_once: true
  ansible.builtin.assert:
    that: "{{ 'data' in _sec.resources[0] }}"

- name: Verify that data has client-secret field
  delegate_to: localhost
  run_once: true
  ansible.builtin.assert:
    that: "{{ 'client-secret' in _sec.resources[0].data }}"

- name: Decode client-secret
  delegate_to: localhost
  run_once: true
  set_fact:
    client_secret: "{{ _sec.resources[0].data['client-secret'] | b64decode | from_yaml }}"

- name: Discover racks and corresponding management nodes placement
  script: rack_to_node_mapping.py '{{ client_secret }}'
  args:
    executable: python3
  register: mgmt_nodes_discovery
  delegate_to: "{{ play_hosts | first }}"
  run_once: true
  changed_when: mgmt_nodes_discovery.rc == 0
